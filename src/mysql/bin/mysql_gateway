#!/usr/bin/env ruby
# -*- mode: ruby -*-
#
# Copyright (c) 2009-2011 VMware, Inc.

ENV["BUNDLE_GEMFILE"] ||= File.expand_path('../../Gemfile', __FILE__)
require 'bundler/setup'
require 'vcap_services_base'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'mysql_service/provisioner'

class VCAP::Services::Mysql::Gateway < VCAP::Services::Base::Gateway

  def provisioner_class
    VCAP::Services::Mysql::Provisioner
  end

  def default_config_file
    config_base_dir = ENV["CLOUD_FOUNDRY_CONFIG_PATH"] || File.join(File.dirname(__FILE__), '..', 'config')
    File.join(config_base_dir, 'mysql_gateway.yml')
  end

  def additional_options
    {
      :resque => @config[:resque]
    }
  end
end

class VCAP::Services::AsynchronousServiceGateway
  put "/gateway/v1/configurations/:id/ioctl" do
    id = params["id"]
    payload = request_body
    @logger.info("Processing ioctl '#{payload}' for service instance #{id}")
    @provisioner.ioctl(id, payload) do |msg|
      if msg['success']
        async_reply(msg['response'])
      else
        async_reply_error(msg['response'])
      end
    end
    async_mode
  end
end

VCAP::Services::Mysql::Gateway.new.start

